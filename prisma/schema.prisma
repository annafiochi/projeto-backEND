// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int @id @default(autoincrement())
  name        String
  email       String @unique
  password    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  books       Book[]
  shelves     Shelf[]
  
  @@map ("users")
}

model Book {
  id          Int @id @default(autoincrement())
  title       String
  synposee    String?
  releaseYear Int
  genres      String 
  imageUrl    String 
  author      String
  shelfId     Int?   
  status      String // "lidos", "nao-lidos", "lendo", "quero-ler", "abandonei", "relendo"
  userId      Int?   // Relacionamento com usuário
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  
  shelf       Shelf? @relation(fields: [shelfId], references: [id])
  user        User?  @relation(fields: [userId], references: [id])

  @@map ("books")
}

model Shelf {
  id          Int @id @default(autoincrement())
  name        String // "Lidos", "Quero Ler", "Lendo", "Abandonei", "Relendo", "Não Lidos"
  description String?
  userId      Int?   // Relacionamento com usuário
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  
  books       Book[] 
  user        User?  @relation(fields: [userId], references: [id])
  
  @@map ("shelves")
}



